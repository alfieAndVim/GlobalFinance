# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - azure-pipelines.yml

variables:
  buildConfiguration: 'Release'
  vmImageName: 'ubuntu-latest'

stages:  
       

- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build

    pool:
      vmImage: $(vmImageName)

    steps:

    - task: DotNetCoreCLI@2
      displayName: New Manifest For Tool
      inputs:
        command: 'custom'
        custom: 'new '
        arguments: 'tool-manifest'
      
    - task: DotNetCoreCLI@2
      displayName: Install EF Tool
      inputs:
        command: 'custom'
        custom: 'tool '
        arguments: 'install --global dotnet-ef'

    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube_Tesing'
        scannerMode: 'MSBuild'
        projectKey: 'Global-Finance'

    - task: DotNetCoreCLI@2
      displayName: Build Server
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'

    - task: SonarQubeAnalyze@5

    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
        
    - task: DotNetCoreCLI@2
      displayName: Build DotNet EF Commands
      inputs:
        command: 'custom'
        custom: 'ef '
        arguments: 'migrations script --output $(Build.SourcesDirectory)/SQL/dotnetupdate.sql --idempotent --project $(Build.SourcesDirectory)/GlobalFinance/Server --context AppDataContext'

    - task: DotNetCoreCLI@2
      displayName: Publish Server
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/GlobalFinance/Server/GlobalFinance.Server.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/SQL/dotnetupdate.sql'
        ArtifactName: 'SQLScripts'
        publishLocation: 'Container'
      
    - task: CopyFiles@2
      inputs:
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

        
    
    