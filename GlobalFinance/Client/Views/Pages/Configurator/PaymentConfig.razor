@page "/cars/{CarId:int}/payment"
@using GlobalFinance.Client.ServicesInterfaces
@using GlobalFinance.Client.Views.Components.Configurator
@using GlobalFinance.Shared.Models
@inject ICarService CarService
@inject IConfiguratorService ConfiguratorService
@inject NavigationManager NavigationManager

<ConfiguratorDisplayComponent _car="@_car" _carImgSrc="@_imgSrc" _action="Choose Payment Option" OptionId="@_paymentOrFinance" _options="@_options" OptionPrice="_optionsPrice"></ConfiguratorDisplayComponent>

@code {
    [Parameter, EditorRequired]
    public int CarId { get; set; }

    private CarModel? _car;

    private string _imgSrc;

    private List<ModelVariantModel> _modelVariants;

    private List<ConfiguratorOptionModel> _options = new List<ConfiguratorOptionModel> {

    new ConfiguratorOptionModel()
    {
        OptionId = 1,
        OptionName = "Payment",
        OptionPriceIncrease = 0
    },
    new ConfiguratorOptionModel()
    {
        OptionId = 2,
        OptionName = "Finance",
        OptionPriceIncrease = 0
    }
    };

    private int _paymentOrFinance;
    private int _optionsPrice;
    private string _forwardRoute;
    private string _returnRoute;

    private ConfigurationModel Configuration;

    protected override async Task OnInitializedAsync()
    {

        await CarService.GetModels(CarId);
        var carResult = await CarService.GetSingleCar(CarId);
        if (carResult is not null)
        {
            Configuration = ConfiguratorService.GetOrSetConfiguration(carResult);

            _car = carResult;
            _imgSrc = $"Images/Car-images/{carResult.CarId}.jpg";
            if (Configuration.Options is not null)
            {
                Configuration.Options.ToList().ForEach(x => _optionsPrice += x.OptionPriceIncrease);
            }
            else
            {
                _optionsPrice = 0;
            }

        }
        _forwardRoute = $"/cars/{CarId}/paintcolour";
        _returnRoute = "/cars";
    }
}

