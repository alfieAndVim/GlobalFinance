@page "/inventory"

@using GlobalFinance.Client.Views.Components

@inject IInventoryService InventoryService
@inject ICarService CarService
@inject IEnquiryService EnquiryService
@inject IConfiguratorService ConfiguratorService
@inject IFinanceService FinanceService

<h3>Showing @_inventoryCount results</h3>

<div class="car-grid">
    @if (_inventory is not null)
    {
        @foreach (int value in Enumerable.Range(0, _inventoryCount))
        {

            <InventoryOptionComponent InventoryId="@_inventory.ElementAt(value).InventoryId" CarMakeName="@_cars.ElementAt(value).CarMakeName" CarModelName="@_cars.ElementAt(value).CarModelName" InventoryMileage="@_inventory.ElementAt(value).InventoryMileage" InventoryPrice="@_inventory.ElementAt(value).InventoryPrice" imgSrc="@GetCarImageSrc(_inventory.ElementAt(value).Customisation.CarId)"></InventoryOptionComponent>
        }
    }
</div>

@code {

    private List<InventoryModel>? _inventory;
    private List<CarModel> _cars = new List<CarModel>();
    private int _inventoryCount;

    protected override async Task OnInitializedAsync()
    {

        EnquiryService.Enquiry = new EnquiryModel();
        ConfiguratorService.SavedConfiguration = new SavedConfigurationModel();
        InventoryService.InventoryCar = new InventoryModel();
        FinanceService.Finance = new FinanceModel();

        await InventoryService.GetInventory();
        _inventory = InventoryService.Inventory;
        _inventory.ForEach(async I => _cars.Add(await GetCar(I.Customisation.CarId)));
        _inventoryCount = _inventory.Count();

        foreach (var i in _inventory)
        {
            _cars.Add(await GetCar(i.Customisation.CarId));
        }
    }

    private async Task<CarModel> GetCar(int id)
    {
        var car = await CarService.GetSingleCar(id);
        if (car != null)
        {
            return car;
        }
        throw new Exception("Car could not be found");
    }

    private string GetCarImageSrc(int id)
    {
        return $"Images/Car-images/{id}.jpg";
    }

}
