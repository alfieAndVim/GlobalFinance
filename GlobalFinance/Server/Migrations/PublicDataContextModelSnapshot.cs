// <auto-generated />
using GlobalFinance.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalFinance.Server.Migrations
{
    [DbContext(typeof(PublicDataContext))]
    partial class PublicDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("GlobalFinance.Shared.Models.CarModel", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarMakeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CarModelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CarOutrightStartingPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarStartingPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            CarMakeName = "Vauxhall",
                            CarModelName = "Corsa",
                            CarOutrightStartingPrice = 16995,
                            CarStartingPrice = 400
                        },
                        new
                        {
                            CarId = 2,
                            CarMakeName = "Vauxhall",
                            CarModelName = "Astra",
                            CarOutrightStartingPrice = 16995,
                            CarStartingPrice = 450
                        },
                        new
                        {
                            CarId = 3,
                            CarMakeName = "Vauxhall",
                            CarModelName = "Mokka",
                            CarOutrightStartingPrice = 21000,
                            CarStartingPrice = 450
                        },
                        new
                        {
                            CarId = 4,
                            CarMakeName = "Vauxhall",
                            CarModelName = "Grandland",
                            CarOutrightStartingPrice = 26000,
                            CarStartingPrice = 460
                        },
                        new
                        {
                            CarId = 5,
                            CarMakeName = "BMW",
                            CarModelName = "3-Series",
                            CarOutrightStartingPrice = 32000,
                            CarStartingPrice = 480
                        },
                        new
                        {
                            CarId = 6,
                            CarMakeName = "BMW",
                            CarModelName = "4-Series",
                            CarOutrightStartingPrice = 40000,
                            CarStartingPrice = 490
                        },
                        new
                        {
                            CarId = 7,
                            CarMakeName = "BMW",
                            CarModelName = "5-Series",
                            CarOutrightStartingPrice = 42000,
                            CarStartingPrice = 495
                        },
                        new
                        {
                            CarId = 8,
                            CarMakeName = "BMW",
                            CarModelName = "7-Series",
                            CarOutrightStartingPrice = 105000,
                            CarStartingPrice = 750
                        },
                        new
                        {
                            CarId = 9,
                            CarMakeName = "Audi",
                            CarModelName = "A1",
                            CarOutrightStartingPrice = 19000,
                            CarStartingPrice = 300
                        },
                        new
                        {
                            CarId = 10,
                            CarMakeName = "Audi",
                            CarModelName = "A3",
                            CarOutrightStartingPrice = 26000,
                            CarStartingPrice = 350
                        },
                        new
                        {
                            CarId = 11,
                            CarMakeName = "Audi",
                            CarModelName = "A4",
                            CarOutrightStartingPrice = 33000,
                            CarStartingPrice = 400
                        },
                        new
                        {
                            CarId = 12,
                            CarMakeName = "Audi",
                            CarModelName = "A5",
                            CarOutrightStartingPrice = 39000,
                            CarStartingPrice = 420
                        },
                        new
                        {
                            CarId = 13,
                            CarMakeName = "Audi",
                            CarModelName = "A6",
                            CarOutrightStartingPrice = 42000,
                            CarStartingPrice = 480
                        },
                        new
                        {
                            CarId = 14,
                            CarMakeName = "Audi",
                            CarModelName = "A7",
                            CarOutrightStartingPrice = 51000,
                            CarStartingPrice = 540
                        },
                        new
                        {
                            CarId = 15,
                            CarMakeName = "Audi",
                            CarModelName = "A8",
                            CarOutrightStartingPrice = 74000,
                            CarStartingPrice = 730
                        });
                });

            modelBuilder.Entity("GlobalFinance.Shared.Models.OfferModel", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OfferExpiry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OfferPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("OfferId");

                    b.HasIndex("CarId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            OfferId = 1,
                            CarId = 1,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 300
                        },
                        new
                        {
                            OfferId = 2,
                            CarId = 2,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 340
                        },
                        new
                        {
                            OfferId = 3,
                            CarId = 3,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 350
                        },
                        new
                        {
                            OfferId = 4,
                            CarId = 4,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 290
                        },
                        new
                        {
                            OfferId = 5,
                            CarId = 5,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 300
                        },
                        new
                        {
                            OfferId = 6,
                            CarId = 6,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 360
                        },
                        new
                        {
                            OfferId = 7,
                            CarId = 7,
                            OfferExpiry = "2/12/2002",
                            OfferPrice = 390
                        });
                });

            modelBuilder.Entity("GlobalFinance.Shared.Models.OfferModel", b =>
                {
                    b.HasOne("GlobalFinance.Shared.Models.CarModel", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
